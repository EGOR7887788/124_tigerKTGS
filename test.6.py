# условный оператор

# условие if_else
# if если true
# else если false

# условие if_ без else
# if если true или false

# операторы сравнения
# 1) < - Меньше — условие верно, если первый операнд меньше второго.
# 2) > - Больше — условие верно, если первый операнд больше второго.
# 3) <= - Меньше или равно.
# 4) >= - Больше или равно.
# 5) == - Равенство. Условие верно, если два операнда равны.
# 6) != - Неравенство. Условие верно, если два операнда неравны.

# операторы in и is
# in, not in = проверка принадлежности
# is, not is = проверка тождественности

# логические операторы
# not = логическое не
# or = логическое или
# and = логическое и

# цепочки операторов
# phyton оддерживает такое понятие как цепочки оперторов.
# при последовательном указании операторов сравнения, in и is между ними ставится оператор and.

# приоритет логических операторов
# 1. first:
# 1) in, not in - проверка принадлежности
# 2) is, is not - проверка тождественности
# 3) < - меньше - условие вернро, если первый операнд меньше второго
# 4) > - больше - условие верно, если первый операнд больше второго
# 5) <= - меньше или равно
# 6) >= - больше или равно
# 7) == - равенство. условие верно, если два операнда неравны
# 8) != - неравенство. условие верно, если два операнда равны
# 2. second:
# not x - логическое "не" или отрицание
# 3. third:
# and - логическое "и" или умножение
# 4. forch:
# or - логическое или или сложение

# конструкция if-elif-else
# иногда необходимо сравнивать значения по порядку.
# и в случае выполнения какого либо условия, все оставшиеся условия проверять не нужно.
# в этом случае используется конструкция if-elif-...-else